配列とハッシュをちゃんと理解する

perl編

配列

my @nums = (a,2,3);

配列のリファレンスの作成
my @nums = (1,2,3);
my $nums = ¥@nums;

リファレスは指すものを意味する
$nums ---> @nums

無名配列のリファレンス
my $nums = [1,2,3];

$nums ---> (1,2,3)


無記名配列のリファレンスの記述は、配列のリファレンスを簡単に作成するための記述だと考えると楽
#配列のリファレンスの作成
my @nums = (1,2,3);
my $nums = ¥@nums;

# 上記の簡略表記
my $nums = [1,2,3];


配列のリファレンスから配列を取り出すにはデリファレンスという操作をする
配列の場合は@{}
my @nums = @{$nums};

次のように括弧を省略可
my @nums = @$nums;

配列の要素を取得するにはデリファレンスしてから取得することもできますが、少し不便。
Perlでは配列のリファレンスから直接要素を取得する方法が用意されている
アロー演算子を使う

my $first = $nums->[0];
my $second = $nums->[1];


次に二次元配列
Perlの特徴、要素として持つことが出来るのはスカラ値のみ
だから配列の要素に「配列」を指定することはできない
my @person1 = ('Ken', 'Japan', 19);
my @person2 = ('Taro', 'USA', 35);

my @persons = (@person1, @person2); # 配列の要素に配列を指定している　NG!!

なのでリファレンスを使ってこうします。
my @person1 = ('Ken', 'Japan', 19);
my @person2 = ('Taro', 'USA', 35);

my @persons = (\@person1, \@person2);
もっとも、次のように書くのが一般的
my $persons = [
  ['Ken', 'Japan', 19],
  ['Taro', 'USA', '35']
];


カンマよりタブ区切りの方がいい
要素の文字中にカンマは使っている可能性あるから。タブは基本ないだろうと。
またタブならExcelにそのまま行ける

ココまで配列


ココからハッシュ
ハッシュの作成
my %person = (name => 'Ken', age => 19);

ハッシュのリファレンスの作成
同じく「\」を使うウィン「¥」？
my %person = (name => 'Ken', age => 19);
my $person = ¥%person;

$person ---> %person　の構図になる

無記名ハッシュの場合
「｛｝」を使う
my $person = {name => 'Ken', age => 19};

これもハッシュのリファレンス作成のための簡略化


ハッシュのリファレンスのデリファレンス
ハッシュのリファレンスからハッシュを取得するにはデリファレンスという操作がいる。
「%{}」これ使え

my %person = %{$person};
括弧省略可
my %person = %$person;

んでリファレンスから要素を取得するには

my $name = $person->{name};
my $age = $person->{age};
