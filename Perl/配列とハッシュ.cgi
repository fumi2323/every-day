#!/usr/bin/perl  // はいお約束
use strict;
use warnings;

// 配列とハッシュ
//　これらを使いこなせばいろんなことが出来るはず

// 簡単に説明すると1つの変数に　複数のデータ（値）を入れること

//　通常変数1つに対して値は１つ。
my $test = 1;
my $moji = "こんにちは";

// これでも特に処理は出来る。けど、めんどくさくなる。
// 例えば、人と職業とレベルを結ぶデータがほしいとする
// 変数だけだと
my $name = "よしぴこ";
my $job = "勇者";
my $lv = 30;
print "ステータスは、名前" $name ",職業" $job ",レベル"　$lv "です。";

まぁ、一人ならこれでも使用できるけど、ドラクエ１じゃないんだし４人はほしい。
上のに４人分作る？
my $name2 = "めれぶ";
my $job2 = "魔法使い";
my $lv2= １２;
print "ステータスは、名前" $name ",職業" $job ",レベル"　$lv "です。";
・・・
・・
・
できなくないけど、大変になってきた。
そこで！！配列！！！
my @charact1 = ("よしぴこ","勇者","30");
my @charact2 = ("メレブ","まほうつかい","１２");
my @charact３ = ("むらさき","村の女","２４");
my @charact４ = ("ダンジョー","戦士","３８");
print "ステータスは、名前" @charact1[0] ",職業" @charact1[1] ",レベル"　@charact1[2] "です。";

って書くことが出来る。
ちょっと、把握しやすくなった。

ともまぁ、ダラダラ長く出来ることが、単純に出来るということかな？

配列関数！！

配列を操作するための関数

push  配列の末尾へ要素を追加
pop　　　　　　配列の末尾の要素を削除
unshift　　　配列の先頭へ要素を追加　
shift　　配列の先頭の要素を削除
reverse　　　　配列の順序を逆順にする
sort　　　　配列の順序をソートする

って書くことが出来る。樹所を
って書くことが出来る。
